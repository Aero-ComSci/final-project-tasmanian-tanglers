from tkinter import *

# Create the main Tkinter window
root = Tk()
root.title("Summertip")
root.geometry('250x350')

# Create a label
lbl = Label(root, text="What activity would you like?")
lbl.grid(column=2, row=0)

select = StringVar()
select.set("Remove")
drop = OptionMenu(root, select, *[], command=lambda choice: clear(choice))
drop.grid(column=2, row=7)

activities = []

# Create a Canvas for scrolling
canvas = Canvas(root, width=200, height=200)
canvas.grid(column=2, row=3, sticky="nsew")

scrollbar = Scrollbar(root, orient="vertical", command=canvas.yview)
scrollbar.grid(column=3, row=3, sticky="ns")
canvas.configure(yscrollcommand=scrollbar.set)

# Create a Frame inside the Canvas
frame = Frame(canvas)
canvas.create_window((0, 0), window=frame, anchor="nw")
frame.bind("<Configure>", lambda e: canvas.configure(scrollregion=canvas.bbox("all")))

def convert():
    for widget in frame.winfo_children():
        widget.destroy()  # Clear existing buttons
    
    for i, item in enumerate(activities):
        if item:
            button = Button(frame, text=item, bg="red", width=20, command=lambda i=item: switch(i))
            button.grid(row=i, column=0, pady=5)

def switch(name):
    for widget in frame.winfo_children():
        if isinstance(widget, Button):  
            if widget.cget("text") == name:
                widget.configure(bg="green" if widget.cget("bg") == "red" else "red")

def clear(choice):
    global activities
    try:
        activities.remove(choice)
    except ValueError:
        lbl.configure(fg="red")

    convert()
    dlear()

def dlear():
    drop["menu"].delete(0, "end")
    options = [item for item in activities if item]
    select.set("Remove")

    for name in options:
        drop["menu"].add_command(label=name, command=lambda n=name: clear(n))

    drop.grid(column=2, row=7) if options else drop.grid_forget()

def reset():
    lbl.configure(text="Add any activities you want", fg="black")

    global entry
    entry = Entry(root, width=30)
    entry.grid(column=2, row=1)

    Button(root, text="Input", command=s7).grid(column=2, row=2)

    dlear()
    convert()

def s7():
    global entry
    global activities
    if entry.get():
        activities.append(entry.get())
        reset()

reset()
root.mainloop()
